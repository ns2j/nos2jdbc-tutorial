<project name="nos2jdbc-tutorial-kotlin-spring" default="gen-ddl" basedir=".">
  <property name="classpathdir" value="target/classes"/>
  <property name="rootpackagename" value="nos2jdbc.tutorial.kotlinspring"/>
  <property name="subpackagename" value="gen"/>
  <property name="entitypackagename" value="entity"/>
  <property name="namespackagename" value="gen.names"/>
  <property name="servicepackagename" value="gen.service"/>
  <property name="serviceclassnamesuffix" value="ServiceBase"/>
  <property name="entityfilepattern" value="nos2jdbc/tutorial/kotlinspring/gen/entity/**/*.java"/>
  <property name="javafileencoding" value="UTF-8"/>
  <property name="version" value="latest"/>
  <property name="sqlfilepattern" value="sql/**/*.sql"/>
  <property name="applyenvtoversion" value="false"/>
  <property name="dump" value="false"/>
  <property name="env" value="ut"/>
  <property name="jdbcmanagername" value="jdbcManager"/>

  <property name="componenttype" value="spring"/>
  <condition property="additional_classpath" value="${runtime_classpath}">
    <isfalse value="${testdb}"/>
    <!--
        <not>
          <equals arg1="${testdb}" arg2="true"/>
        </not>
    -->
  </condition>
  <condition property="additional_classpath" value="${test_classpath}">
    <istrue value="${testdb}"/>
    <!--
          <equals arg1="${testdb}" arg2="true"/>
    -->
  </condition>
  <path id="classpath">
    <pathelement location="forgen/resources"/>
    <fileset dir="forgen/lib">
      <exclude name="forgen/lib/sources/**"/>
    </fileset>
    <pathelement path="${plugin_classpath}"/>
    <pathelement path="${additional_classpath}"/>
    <pathelement location="${classpathdir}"/>
  </path>

  <taskdef resource="s2jdbc-gen-task.properties" classpathref="classpath"/>

  <target name="gen-entity">
    <gen-entity
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        javafiledestdir="${javafiledestdir}"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
      />
    <javac
        srcdir="${javafiledestdir}"
        destdir="${classpathdir}"
        encoding="${javafileencoding}"
        fork="true"
        debug="on"
        classpathref="classpath">
      <include name="${entityfilepattern}"/>
    </javac>
    <gen-names
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        namespackagename="${namespackagename}"
        javafiledestdir="${javafiledestdir}"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
      />
    <gen-sqlfileconstants
        classpathDir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        subpackagename="${subpackagename}"
        javafiledestdir="${javafiledestdir}"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath">
      <sqlfileset dir="${classpathdir}">
        <include name="${sqlfilepattern}" />
      </sqlfileset>
    </gen-sqlfileconstants>
    <gen-service
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        namespackagename="${namespackagename}"
        servicepackagename="${servicepackagename}"
        serviceclassnamesuffix="${serviceclassnamesuffix}"
        javafiledestdir="${javafiledestdir}"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        componenttype="${componenttype}"
      />
    <gen-entitytest
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        namespackagename="${namespackagename}"
        javafiledestdir="${testjavafiledestdir}"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        componenttype="${componenttype}"
      />
    <gen-servicetest
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        servicepackagename="${servicepackagename}"
        serviceclassnamesuffix="${serviceclassnamesuffix}"
        javafiledestdir="${testjavafiledestdir}"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        componenttype="${componenttype}"
      />
    <gen-sqlfiletest
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        javafiledestdir="${testjavafiledestdir}"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        componenttype="${componenttype}"
        >
      <sqlfileset dir="${classpathdir}">
        <include name="${sqlfilepattern}" />
      </sqlfileset>
    </gen-sqlfiletest>
  </target>
  <target name="gen-ddl">
    <gen-ddl
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        env="${env}"
        dump="${dump}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
      />
    <gen-names
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        namespackagename="${namespackagename}"
    	jvmlang="kotlin"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
      />
    <gen-sqlfileconstants
        classpathDir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        subpackagename="${subpackagename}"
    	jvmlang="kotlin"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath">
      <sqlfileset dir="${classpathdir}">
        <include name="${sqlfilepattern}" />
      </sqlfileset>
    </gen-sqlfileconstants>
    <gen-service
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        namespackagename="${namespackagename}"
        servicepackagename="${servicepackagename}"
        serviceclassnamesuffix="${serviceclassnamesuffix}"
  	jvmlang="kotlin"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        componenttype="${componenttype}"
      />
    <gen-entitytest
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        namespackagename="${namespackagename}"
  	jvmlang="kotlin"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        componenttype="${componenttype}"
      />
    <gen-servicetest
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        servicepackagename="${servicepackagename}"
        serviceclassnamesuffix="${serviceclassnamesuffix}"
  	jvmlang="kotlin"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
          componenttype="${componenttype}"
      />
    <gen-sqlfiletest
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        subpackagename="${subpackagename}"
  	jvmlang="kotlin"
        javafileencoding="${javafileencoding}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        componenttype="${componenttype}"
      >
      <sqlfileset dir="${classpathdir}">
        <include name="${sqlfilepattern}" />
      </sqlfileset>
    </gen-sqlfiletest>
  </target>

  <target name="migrate">
    <migrate
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        applyenvtoversion="${applyenvtoversion}"
        version="${version}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
        testdb="${testdb}"
      />
  </target>

  <target name="rollback">
    <migrate
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        entitypackagename="${entitypackagename}"
        applyenvtoversion="${applyenvtoversion}"
        version="previous"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
      />
  </target>

  <target name="dump">
    <dump-data
        classpathdir="${classpathdir}"
        rootpackagename="${rootpackagename}"
        applyenvtoversion="${applyenvtoversion}"
        entitypackagename="${entitypackagename}"
        env="${env}"
        jdbcmanagername="${jdbcmanagername}"
        classpathref="classpath"
      />
  </target>

</project>
